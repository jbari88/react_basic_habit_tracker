{"version":3,"sources":["components/habit.jsx","components/habitAddForm.jsx","components/habits.jsx","components/navbar.jsx","app.jsx","index.js"],"names":["Habit","handleIncrement","event","props","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","console","log","this","name","count","className","onClick","PureComponent","HabitAddForm","memo","formRef","React","createRef","inputRef","ref","onSubmit","preventDefault","current","value","onAdd","reset","type","placeholder","Habits","handleAdd","habits","map","id","onReset","Component","Navbar","totalCount","App","state","item","setState","filter","Date","now","handleReset","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ae1f6b2.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\n\nclass Habit extends PureComponent {\n    /*state = {\n        count: 0,\n    };*/\n\n    componentDidMount(){\n        console.log(`habit: ${this.props.habit.name} mounted`)\n\n    };\n\n    componentWillUnmount(){\n        console.log(`habit: ${this.props.habit.name} will unmounted`)\n\n    }\n    handleIncrement = (event) => {\n        // check event\n        //console.log(event);\n        // state 오브젝트 안에 있는 count를 증가 한 뒤 state를 업데이트 한다\n        //this.setState({count: this.state.count+1})\n        // this.state.count+=1; 불가능 \n        // object값을 그냥 업데이트 하게 되면 react가 업데이트 여부를 알 수 없음\n        this.props.onIncrement(this.props.habit);\n\n\n    };\n    handleDecrement = () => {\n        //const count = this.state.count-1;\n        // state 오브젝트 안에 있는 count를 증가 한 뒤 state를 업데이트 한다\n        //this.setState({count: count < 0 ? 0 : count})\n        // this.state.count+=1; 불가능 \n        // object값을 그냥 업데이트 하게 되면 react가 업데이트 여부를 알 수 없음\n        this.props.onDecrement(this.props.habit);\n\n    };\n\n    handleDelete = () =>{\n        this.props.onDelete(this.props.habit);\n        \n    };\n\n    render() {\n        console.log('habit');\n        const {name, count} = this.props.habit;\n       \n        \n        return (\n        <li className=\"habit\">\n        <span className=\"habit-name\">{name}</span>\n        <span className=\"habit-count\">{count}</span>\n        <button className=\"habit-button habit-increase\" onClick={this.handleIncrement}>\n            <i className=\"fas fa-plus-square\"></i>\n        </button>\n        <button className=\"habit-button habit-decrease\" onClick={this.handleDecrement}>\n            <i className=\"fas fa-minus-square\"></i>\n        </button>\n        <button className=\"habit-button habit-delete\" onClick={this.handleDelete}>\n            <i className=\"fas fa-trash\"></i>\n        </button>\n        </li>\n        );\n    }\n}\n\nexport default Habit;","//import React, { Component } from 'react';\n/*import React, { PureComponent } from 'react';\n\nclass HabitAddForm extends PureComponent {\n    formRef = React.createRef();\n    inputRef = React.createRef();\n    onSubmit = (event) => {\n        // refresh 되는 것을 막아줍니다. \n        event.preventDefault(); \n        //console.log(this.inputRef.current.value);\n        const name = this.inputRef.current.value;\n        name && this.props.onAdd(name);\n        this.inputRef.current.value='';\n        this.formRef.current.reset();\n    };\n    render() {\n        console.log('habitAddform');\n        return (\n            <div>\n                <form ref={this.formRef} className=\"add-Form\" onSubmit={this.onSubmit}>\n                <input ref={this.inputRef} type=\"text\" className=\"add-input\" placeholder=\"Habit\"/>\n                <button className=\"add-button\">Add</button>\n                </form>\n                \n            </div>\n        );\n    }\n}\n\nexport default HabitAddForm;*/\n\nimport React, { memo } from 'react';\n\nconst HabitAddForm = memo( props => {\n    const formRef = React.createRef();\n    const inputRef = React.createRef();\n\n    const onSubmit = (event) => {\n        // refresh 되는 것을 막아줍니다. \n        event.preventDefault(); \n        //console.log(this.inputRef.current.value);\n        const name = inputRef.current.value;\n        name && props.onAdd(name);\n        inputRef.current.value='';\n        formRef.current.reset();\n    };\n    return (\n        <div>\n            <form ref={formRef} className=\"add-Form\" onSubmit={onSubmit}>\n            <input ref={inputRef} type=\"text\" className=\"add-input\" placeholder=\"Habit\"/>\n            <button className=\"add-button\">Add</button>\n            </form>\n            \n        </div>\n    );\n            \n});\n\nexport default HabitAddForm;","import React, { Component } from 'react';\nimport Habit from './habit';\nimport HabitAddForm from './habitAddForm';\n\nclass Habits extends Component {\n    componentDidUpdate(){\n        // component가 업데이트 될 때마다 호출됨\n        // render 함수가 호출될 때마다 즉, state 값이변경될 때마다\n        // 해당 함수가 호출된다.\n    }\n    \n    handleIncrement = habit => {\n        this.props.onIncrement(habit);\n    };\n    handleDecrement = habit => {\n        this.props.onDecrement(habit);\n    };\n\n    handleDelete = habit => {\n        this.props.onDelete(habit);\n    };\n\n    handleAdd = name => {\n        this.props.onAdd(name);\n    };\n    \n    render() {\n        console.log('habits')\n        return (\n        <>\n        <HabitAddForm onAdd={this.handleAdd}/>\n        <ul>\n        {\n            this.props.habits.map(habit=>\n                <Habit \n                    key={habit.id} \n                    habit={habit} \n                    count={habit.count}\n                    onIncrement={this.handleIncrement}\n                    onDecrement={this.handleDecrement}\n                    onDelete={this.handleDelete}\n                />\n            )\n        }\n        </ul>\n        <button className=\"habits-reset\" onClick={this.props.onReset}>Reset All</button>\n        </>);\n    }\n}\n\nexport default Habits","import React, { PureComponent } from 'react';\n\nclass Navbar extends PureComponent {\n    render() {\n        console.log('navbar');\n        return (\n            <div className=\"navbar\">\n                <i className=\"navbar-logo fas fa-leaf\"></i>\n                <span>Habit Tracker</span>\n                <span className=\"navbar-count\">{this.props.totalCount}</span>\n            </div>\n        );\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport './app.css';\n//import React from 'react';\nimport Habits from './components/habits';\nimport Navbar from './components/navbar';\n\nimport './app.css';\n\n/*function App() {\n  return <Habits/>;\n}\nexport default App;\n*/\n\n\n\nclass App extends Component {\n  state = {\n    habits: [\n        {id: 1, name : 'Reading', count: 0 },\n        {id: 2, name : 'Running', count: 0 },\n        {id: 3, name : 'Coding', count: 0 },\n    ]\n  };\n  handleIncrement = (habit) => {\n    //console.log(`handleIncrement ${habit.name}`);\n    // 옳지 않는 방식\n   /* habit.count++;\n    this.setState(this.state);\n    // react에서는 state를 직접 변경하면 안 된다. \n    */\n\n   // 아래와 같은 코드를 하면 habit component를 PureComponent로 만들었을 때,\n   // count 값의 변화가 반영되지 않는다.\n   // shallow comparison 속성 때문에 object 자체가 변경되어야함\n   /*const habits=[...this.state.habits]; // ... spread operators\n   const index = habits.indexOf(habit);\n   habits[index].count++;\n   //this.setState({habits: habits}); \n   // 아래와 동일\n   this.setState({habits});*/\n\n\n   const habits = this.state.habits.map(item=> {\n     if (item.id === habit.id){\n       return {...habit, count: habit.count+1}; // deconstructing object\n     }\n     return item;\n   });\n   this.setState({habits});\n\n};\nhandleDecrement = (habit) => {\n    //console.log(`handleDecrement ${habit.name}`);\n    /*const habits = [...this.state.habits];\n    const index = habits.indexOf(habit);\n    const count = habits[index].count-1;\n        \n    habits[index].count = count < 0 ? 0 : count;\n    this.setState({habits});*/\n\n    const habits = this.state.habits.map(item=> {\n      if (item.id === habit.id){\n        const count = habit.count-1;\n        return {...habit, count: count < 0 ? 0 : count}; // deconstructing object\n      }\n      return item;\n    });\n    this.setState({habits});\n\n};\nhandleDelete = (habit) => {\n    //console.log(`handleDelete ${habit.name}`);\n    const habits = this.state.habits.filter(item => item.id !== habit.id);\n    this.setState({habits});\n    \n\n};\nhandleAdd = name => {\n  const habits = [...this.state.habits,{id: Date.now(), name, count:0} ];\n  this.setState({habits});\n};\nhandleReset = () => {\n  /*const habits = this.state.habits.map(habit => {\n    habit.count=0;\n    return habit;\n  });\n  this.setState({habits});\n*/\n  const habits = this.state.habits.map(item=>{\n    if(item.count !=0 ){\n      return {...item, count:0};\n    }\n    return item;\n    \n  });\n  this.setState({habits});\n};\n  render() {\n    console.log('app');\n    return (\n    <>\n    <Navbar totalCount={this.state.habits.filter(item => item.count > 0).length}/>\n    <Habits \n      habits={this.state.habits}\n      onIncrement={this.handleIncrement}\n      onDecrement={this.handleDecrement}\n      onDelete={this.handleDelete}\n      onAdd={this.handleAdd}\n      onReset={this.handleReset}\n    />\n    </>\n    );\n  }\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}